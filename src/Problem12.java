/**
 * Created by OS on 9/6/2017.
 */
public class Problem12 {

    //    The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
//
//            1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
//
//    Let us list the factors of the first seven triangle numbers:
//
//            1: 1
//            3: 1,3
//            6: 1,2,3,6
//            10: 1,2,5,10
//            15: 1,3,5,15
//            21: 1,3,7,21
//            28: 1,2,4,7,14,28
//    We can see that 28 is the first triangle number to have over five divisors.
//
//    What is the value of the first triangle number to have over five hundred divisors?

    public static long solve(int n) {
        int num = 1, count = 1;
        while (true) {
            if (numDiv(num) > n) {
                break;
            }
            num += ++count;
        }
        return num;
    }

    public static long solve2(int n) {
        int num = 1;
        while (true) {
            if (numDiv((num + 1) * num / 2) > n) {
                break;
            }
            num++;
        }
        return (num + 1) * num / 2;
    }


    private static int numDiv(long n) {
        if (n == 1) return 1;
        int num = 0;
        long lim = n;

        for (int i = 1; i < lim; ++i) {
            if (n % i == 0) {
                lim = n / i;
                if (lim != i)
                    num++;
                num++;
            }
        }
        return num;
    }
}
